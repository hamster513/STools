/**
 * AuthManager - –ú–µ–Ω–µ–¥–∂–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * v=8.0 - –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–æ–∫–µ–Ω–æ–≤
 */
class AuthManager {
    constructor(app) {
        this.app = app;
        this.storage = app.storage;
        this.api = app.api;
        this.eventManager = app.eventManager;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    async checkAuth() {
        const token = this.storage.get('auth_token');
        console.log('üîç AuthManager.checkAuth: —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω:', !!token);
        console.log('üîç AuthManager.checkAuth: localStorage —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:', {
            auth_token: localStorage.getItem('auth_token') ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
            user_info: localStorage.getItem('user_info') ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'
        });
        
        if (!token) {
            console.log('‚ùå AuthManager.checkAuth: —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /auth/');
            window.location.href = '/auth/';
            return;
        }

        try {
            const response = await fetch('/auth/api/verify', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                }
            });

            if (response.ok) {
                const userData = await response.json();
                await this.handleAuthSuccess(userData);
            } else {
                this.handleAuthError();
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:', error);
            this.handleAuthError();
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    async handleAuthSuccess(userData) {
        console.log('‚úÖ AuthManager.handleAuthSuccess: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
        if (userData.user) {
            this.storage.set('user_info', userData.user);
            console.log('üíæ AuthManager.handleAuthSuccess: user_info —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            const isAdmin = userData.user.is_admin === true;
            console.log('üëë AuthManager.handleAuthSuccess: is_admin =', isAdmin);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤
            this.app.updateSidebarVisibility(isAdmin);
            this.app.updateMenuVisibility(isAdmin);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await this.loadUserSettings();
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    handleAuthError() {
        this.storage.remove('auth_token');
        this.storage.remove('user_info');
        window.location.href = '/auth/';
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async loadUserSettings() {
        try {
            const response = await fetch('/auth/user-settings', {
                headers: {
                    'Authorization': `Bearer ${this.storage.get('auth_token')}`
                }
            });

            if (response.ok) {
                const settings = await response.json();
                this.applyUserSettings(settings);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        }
    }

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    applyUserSettings(settings) {
        if (settings.theme) {
            document.documentElement.setAttribute('data-theme', settings.theme);
            this.app.updateThemeText(settings.theme);
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    checkUserPermissions() {
        const userInfo = this.storage.get('user_info');
        if (userInfo) {
            try {
                const user = typeof userInfo === 'string' ? JSON.parse(userInfo) : userInfo;
                const isAdmin = user.is_admin === true;
                
                this.app.updateSidebarVisibility(isAdmin);
                this.app.updateMenuVisibility(isAdmin);
            } catch (e) {
                console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
            }
        }
    }

    // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    logout() {
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.storage.remove('auth_token');
        this.storage.remove('user_info');
        
        // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –≤—ã—Ö–æ–¥–∞
        if (this.eventManager) {
            this.eventManager.emit('userLogout');
        }
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        window.location.href = '/auth/';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    getCurrentUser() {
        const userInfo = this.storage.get('user_info');
        if (userInfo) {
            try {
                return typeof userInfo === 'string' ? JSON.parse(userInfo) : userInfo;
            } catch (e) {
                console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
                return null;
            }
        }
        return null;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    hasRole(role) {
        const user = this.getCurrentUser();
        if (role === 'admin') {
            return user && user.is_admin === true;
        }
        return user && user.role === role;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    isAdmin() {
        return this.hasRole('admin');
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    openUsersPage() {
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å auth —Å–µ—Ä–≤–∏—Å–∞
        window.location.href = '/auth/admin/users/';
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = AuthManager;
} else {
    window.AuthManager = AuthManager;
}
