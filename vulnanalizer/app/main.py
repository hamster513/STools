"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è VulnAnalizer
"""
from fastapi import FastAPI, Response, Request
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import FileResponse, HTMLResponse
from fastapi.templating import Jinja2Templates
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç—ã
from routes.system import router as system_router
from routes.hosts import router as hosts_router
from routes.epss import router as epss_router
from routes.exploitdb import router as exploitdb_router
from routes.cve import router as cve_router
from routes.vm import router as vm_router
from routes.metasploit import router as metasploit_router
from routes.backup import router as backup_router
from routes.archive import router as archive_router

def get_version():
    try:
        with open('/app/VERSION', 'r') as f:
            return f.read().strip()
    except:
        return "0.6.00"

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(
    title="VulnAnalizer API",
    description="API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π",
    version=get_version()
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.mount("/static", StaticFiles(directory="static"), name="static")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç–∏
template_dirs = ["templates"]
shared_templates_path = os.getenv('SHARED_TEMPLATES_PATH', None)
if shared_templates_path:
    template_dirs.append(shared_templates_path)

templates = Jinja2Templates(directory=template_dirs)

# –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ä–æ—É—Ç –¥–ª—è CSS —Ñ–∞–π–ª–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
@app.get("/static/css/style.css")
async def get_style_css():
    return FileResponse(
        "static/css/style.css",
        media_type="text/css",
        headers={
            "Cache-Control": "no-cache, no-store, must-revalidate",
            "Pragma": "no-cache",
            "Expires": "0"
        }
    )

# –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ä–æ—É—Ç –¥–ª—è collapsible.css —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
@app.get("/static/css/components/collapsible.css")
async def get_collapsible_css():
    return FileResponse(
        "static/css/components/collapsible.css",
        media_type="text/css",
        headers={
            "Cache-Control": "no-cache, no-store, must-revalidate",
            "Pragma": "no-cache",
            "Expires": "0"
        }
    )

# –ù–æ–≤—ã–π —Ä–æ—É—Ç –¥–ª—è CSS —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ API
@app.get("/api/css/collapsible.css")
async def get_collapsible_css_api():
    return FileResponse(
        "static/css/components/collapsible.css",
        media_type="text/css",
        headers={
            "Cache-Control": "no-cache, no-store, must-revalidate",
            "Pragma": "no-cache",
            "Expires": "0"
        }
    )

# –ù–æ–≤—ã–π —Ä–æ—É—Ç –¥–ª—è CSS —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—É—Ç—å
@app.get("/css-debug/collapsible.css")
@app.head("/css-debug/collapsible.css")
async def get_collapsible_css_debug():
    return FileResponse(
        "static/css/components/collapsible.css",
        media_type="text/css",
        headers={
            "Cache-Control": "no-cache, no-store, must-revalidate",
            "Pragma": "no-cache",
            "Expires": "0"
        }
    )

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.get("/", response_class=HTMLResponse)
async def index(request: Request):
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ VulnAnalizer"""
    return templates.TemplateResponse("index.html", {"request": request, "version": get_version()})

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç—ã
app.include_router(system_router)
app.include_router(hosts_router)
app.include_router(epss_router)
app.include_router(exploitdb_router)
app.include_router(cve_router)
app.include_router(vm_router)
app.include_router(metasploit_router)
app.include_router(backup_router)
app.include_router(archive_router)

# –°–æ–±—ã—Ç–∏—è –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
@app.on_event("startup")
async def startup():
    """–°–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    from database import get_db
    db = get_db()
    try:
        conn = await db.get_connection()
        await conn.execute("SELECT 1")
        await db.release_connection(conn)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
        from services.scheduler_service import scheduler_service
        await scheduler_service.start_scheduler()
        print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")


@app.on_event("shutdown")
async def shutdown():
    """–°–æ–±—ã—Ç–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    try:
        from services.scheduler_service import scheduler_service
        await scheduler_service.stop_scheduler()
        print("üîÑ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")
    
    print("üîÑ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
