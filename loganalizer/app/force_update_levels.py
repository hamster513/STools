#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π –ª–æ–≥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import asyncpg
import json
import sys

async def force_update_log_levels():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = await asyncpg.connect(
            host='localhost',
            user='loganalizer',
            password='loganalizer',
            database='loganalizer'
        )
        
        # –ù–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–æ–≤
        new_levels = ['ERROR', 'WARN', 'CRITICAL', 'FATAL', 'ALERT', 'EMERGENCY', 'INFO', 'DEBUG']
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        await conn.execute('''
            UPDATE settings 
            SET value = $1::jsonb
            WHERE key = 'important_log_levels'
        ''', json.dumps(new_levels))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = await conn.fetchval('''
            SELECT value FROM settings WHERE key = 'important_log_levels'
        ''')
        
        print(f'‚úÖ Log levels force updated successfully!')
        print(f'üìã New levels: {result}')
        
        # –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
        await conn.execute('DELETE FROM settings WHERE key = "_cache"')
        
        await conn.close()
        
    except Exception as e:
        print(f'‚ùå Error updating log levels: {e}')
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(force_update_log_levels()) 