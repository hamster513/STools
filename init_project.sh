#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ STools
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ STools${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "docker-compose.yml" ] || [ ! -f "docker-compose.prod.yml" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ STools${NC}"
    exit 1
fi

# 1. –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...${NC}"
    if [ -f "env.example" ]; then
        cp env.example .env
        echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
    else
        echo -e "${RED}‚ùå –§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
else
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo -e "${YELLOW}üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞...${NC}"
if [ -f "generate_ssl_cert.sh" ]; then
    ./generate_ssl_cert.sh
else
    echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç generate_ssl_cert.sh –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    exit 1
fi

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo -e "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker:"
    echo -e "  https://docs.docker.com/get-docker/"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo -e "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose:"
    echo -e "  https://docs.docker.com/compose/install/"
    exit 1
fi

echo -e "${GREEN}‚úÖ Docker –∏ Docker Compose –¥–æ—Å—Ç—É–ø–Ω—ã${NC}"

# 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
echo -e "${YELLOW}üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
if [ -f ".env" ]; then
    echo -e "   HTTP –ø–æ—Ä—Ç: ${GREEN}$(grep NGINX_HTTP_PORT .env | cut -d'=' -f2)${NC}"
    echo -e "   HTTPS –ø–æ—Ä—Ç: ${GREEN}$(grep NGINX_HTTPS_PORT .env | cut -d'=' -f2)${NC}"
    echo -e "   –î–æ–º–µ–Ω: ${GREEN}$(grep DOMAIN .env | cut -d'=' -f2)${NC}"
fi

# 5. –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
echo -e "${YELLOW}ü§î –•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å–µ–π—á–∞—Å?${NC}"
echo -e "   –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤"
read -p "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç? (y/N): " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
    docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    echo -e "${YELLOW}üì¶ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
    docker-compose -f docker-compose.prod.yml up -d
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    sleep 10
    
    echo -e "${YELLOW}üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
    docker-compose -f docker-compose.prod.yml ps
    
    echo -e "${GREEN}üéâ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo -e "${YELLOW}üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:${NC}"
    HTTP_PORT=$(grep NGINX_HTTP_PORT .env | cut -d'=' -f2)
    HTTPS_PORT=$(grep NGINX_HTTPS_PORT .env | cut -d'=' -f2)
    DOMAIN=$(grep DOMAIN .env | cut -d'=' -f2)
    
    echo -e "   HTTP: ${GREEN}http://$DOMAIN:$HTTP_PORT${NC}"
    echo -e "   HTTPS: ${GREEN}https://$DOMAIN:$HTTPS_PORT${NC}"
    echo -e "   VulnAnalizer: ${GREEN}https://$DOMAIN:$HTTPS_PORT/vulnanalizer/${NC}"
    echo -e "   LogAnalizer: ${GREEN}https://$DOMAIN:$HTTPS_PORT/loganalizer/${NC}"
    echo -e "   Auth: ${GREEN}https://$DOMAIN:$HTTPS_PORT/auth/${NC}"
    
    echo -e "${YELLOW}üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo -e "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: ${GREEN}docker-compose -f docker-compose.prod.yml logs -f${NC}"
    echo -e "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ${GREEN}docker-compose -f docker-compose.prod.yml down${NC}"
    echo -e "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ${GREEN}docker-compose -f docker-compose.prod.yml restart${NC}"
    
else
    echo -e "${GREEN}‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo -e "${YELLOW}üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
    echo -e "   docker-compose -f docker-compose.prod.yml up -d"
fi

echo -e "${GREEN}üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ STools –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
