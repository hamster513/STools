import asyncio
import asyncpg

async def check_exploitdb_types():
    conn = await asyncpg.connect('postgresql://stools_user:stools_pass@postgres/stools_db')
    
    # Устанавливаем схему vulnanalizer
    await conn.execute('SET search_path TO vulnanalizer;')
    
    # Проверяем уникальные типы эксплойтов
    types_query = """
        SELECT type, COUNT(*) as count 
        FROM exploitdb 
        WHERE type IS NOT NULL AND type != ''
        GROUP BY type 
        ORDER BY count DESC
        LIMIT 20
    """
    types = await conn.fetch(types_query)
    
    print('Типы эксплойтов в exploitdb:')
    for row in types:
        print(f'  {row["type"]}: {row["count"]} записей')
    
    # Проверяем несколько примеров записей
    sample_query = """
        SELECT exploit_id, type, description, platform, verified
        FROM exploitdb 
        WHERE type IS NOT NULL AND type != ''
        ORDER BY exploit_id DESC
        LIMIT 10
    """
    samples = await conn.fetch(sample_query)
    
    print(f'\nПримеры записей exploitdb:')
    for i, row in enumerate(samples):
        print(f'  Запись {i+1}:')
        print(f'    ID: {row["exploit_id"]}')
        print(f'    Тип: {row["type"]}')
        print(f'    Платформа: {row["platform"]}')
        print(f'    Проверен: {row["verified"]}')
        print(f'    Описание: {row["description"][:100]}...')
        print()
    
    await conn.close()

if __name__ == "__main__":
    asyncio.run(check_exploitdb_types())
