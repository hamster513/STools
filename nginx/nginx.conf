events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Оптимизированное логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Основные настройки производительности
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    client_max_body_size 3G;
    client_body_timeout 3600s;
    client_header_timeout 60s;

    # Оптимизированное Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-www-form-urlencoded;

    # Кэширование файлов
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Upstream для сервисов с health checks
    upstream auth_backend {
        server auth_web:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # LogAnalizer backend (закомментирован - используется заглушка)
    # upstream loganalizer_backend {
    #     server loganalizer_web:8000 max_fails=3 fail_timeout=30s;
    #     keepalive 32;
    # }

    upstream vulnanalizer_backend {
        server vulnanalizer_web:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream main_backend {
        server main_web:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP сервер - редирект на HTTPS
    server {
        listen 80;
        server_name _;
        
        # Редирект всех HTTP запросов на HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS сервер
    server {
        listen 443 ssl;
        http2 on;
        server_name _;

        # SSL конфигурация
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;
        
        # SSL настройки безопасности
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Дополнительные заголовки безопасности
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Общие статические файлы с оптимизированным кэшированием
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            add_header X-XSS-Protection "1; mode=block";
            
            # Для CSS файлов отключаем кэширование при разработке
            location ~* \.css$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
            
            # Оптимизация для статических файлов
            access_log off;
            log_not_found off;
        }

        # Auth статические файлы
        location /auth/static/ {
            # Передаем запросы напрямую в auth_backend без rewrite
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Оптимизированные заголовки
            proxy_set_header Accept-Encoding "";
            proxy_buffering off;
            proxy_cache off;
            
            # Отключаем кэширование для динамических файлов
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Auth API с оптимизацией
        location /auth/api/ {
            rewrite ^/auth/api/(.*) /api/$1 break;
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Оптимизированные таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Буферизация для API
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Auth страницы
        location /auth/ {
            rewrite ^/auth/(.*) /$1 break;
            proxy_pass http://auth_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Статические файлы для LogAnalizer (закомментировано - используется заглушка)
        # location /loganalizer/static/ {
        #     rewrite ^/loganalizer/static/(.*) /static/$1 break;
        #     proxy_pass http://loganalizer_backend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     
        #     proxy_set_header Accept-Encoding "";
        #     proxy_buffering off;
        #     proxy_cache off;
        #     
        #     add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
        #     add_header Pragma "no-cache";
        #     add_header Expires "0";
        # }

        # Статические файлы для VulnAnalizer (только специфичные для приложения)
        location /vulnanalizer/static/ {
            # Для CSS файлов используем общие стили
            location ~ ^/vulnanalizer/static/css/.*\.css$ {
                rewrite ^/vulnanalizer/static/css/(.*) /static/css/$1 last;
            }
            
            # Для остальных статических файлов используем преобразование
            rewrite ^/vulnanalizer/static/(.*) /static/$1 break;
            proxy_pass http://vulnanalizer_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_set_header Accept-Encoding "";
            proxy_buffering off;
            proxy_cache off;
            
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # API для LogAnalizer с оптимизацией (закомментировано - используется заглушка)
        # location /loganalizer/api/ {
        #     rewrite ^/loganalizer/api/(.*) /api/$1 break;
        #     proxy_pass http://loganalizer_backend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     
        #     # Увеличенные таймауты для длительных операций
        #     proxy_connect_timeout 300s;
        #     proxy_send_timeout 300s;
        #     proxy_read_timeout 300s;
        #     
        #     # Буферизация для больших ответов
        #     proxy_buffering on;
        #     proxy_buffer_size 8k;
        #     proxy_buffers 16 8k;
        # }

        # API для VulnAnalizer с оптимизацией
        location /vulnanalizer/api/ {
            rewrite ^/vulnanalizer/api/(.*) /api/$1 break;
            proxy_pass http://vulnanalizer_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Увеличенные таймауты для длительных операций и больших файлов
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            
            # Буферизация для больших ответов
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 32 16k;
            
            # Дополнительные настройки для больших файлов
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }

        # Главная страница - редирект на Auth
        location = / {
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Last-Modified "";
            add_header ETag "";
            add_header Vary "Host";
            return 302 https://$host/auth/?nocache=$time_iso8601;
        }
        
        # Перенаправление с vulnanalizer/login на auth
        location = /vulnanalizer/login {
            return 302 https://$host/auth/;
        }

        # VulnAnalizer - /vulnanalizer/ (исключая /static/)
        location /vulnanalizer/ {
            # Исключаем статические файлы из общего правила
            location ~ ^/vulnanalizer/static/ {
                # Передаем статические файлы в vulnanalizer_backend без изменений
                proxy_pass http://vulnanalizer_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Accept-Encoding "";
                proxy_buffering off;
                proxy_cache off;
                add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
            
            rewrite ^/vulnanalizer/(.*) /$1 break;
            proxy_pass http://vulnanalizer_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # LogAnalizer - заглушка "Under Construction"
        location /loganalizer/ {
            root /var/www/static;
            try_files /loganalizer.html =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # LogAnalizer - оригинальная конфигурация (закомментировано - используется заглушка)
        # location /loganalizer/ {
        #     rewrite ^/loganalizer/(.*) /$1 break;
        #     proxy_pass http://loganalizer_backend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_connect_timeout 30s;
        #     proxy_send_timeout 30s;
        #     proxy_read_timeout 30s;
        # }

        # Health check endpoint
        location = /health {
            proxy_pass http://main_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Административные страницы
        location /users/ {
            proxy_pass http://main_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /background-tasks/ {
            proxy_pass http://main_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /settings/ {
            proxy_pass http://main_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # CSS файлы для VulnAnalizer через API
        location ~ ^/api/css/.*\.css$ {
            proxy_pass http://vulnanalizer_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Accept-Encoding "";
            proxy_buffering off;
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # API для бэкапов - перенаправляем в vulnanalizer_web
        location /api/backup/ {
            proxy_pass http://vulnanalizer_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Увеличенные таймауты для операций с бэкапами
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            
            # Буферизация для больших файлов
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 32 16k;
            
            # Дополнительные настройки для больших файлов
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }

        # API для main_web (остальные API)
        location /api/ {
            proxy_pass http://main_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Fallback - редирект на VulnAnalizer
        location / {
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0, private";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Last-Modified "";
            add_header ETag "";
            add_header Vary "Host, User-Agent";
            add_header X-No-Cache "1";
            return 302 https://$host/vulnanalizer/?nocache=$time_iso8601;
        }
    }
} 