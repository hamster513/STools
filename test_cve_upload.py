#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ CVE –¥–∞–Ω–Ω—ã—Ö
"""
import requests
import json
import os
from pathlib import Path

def test_cve_upload():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ CVE –¥–∞–Ω–Ω—ã—Ö"""
    
    # URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    upload_url = "https://localhost/vulnanalizer/api/cve/upload"
    status_url = "https://localhost/vulnanalizer/api/cve/status"
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É
    test_file = Path("/Users/hom/Downloads/test_cve_small.json")
    
    if not test_file.exists():
        print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üìÅ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_file}")
    print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {test_file.stat().st_size} –±–∞–π—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏...")
    try:
        response = requests.get(status_url, verify=False)
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –ó–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {data.get('count', 0)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
    print("\nüì§ –ó–∞–≥—Ä—É–∂–∞–µ–º CVE –¥–∞–Ω–Ω—ã–µ...")
    try:
        with open(test_file, 'rb') as f:
            files = {'file': (test_file.name, f, 'application/json')}
            response = requests.post(upload_url, files=files, verify=False)
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
            print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {data.get('count', 0)}")
            print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message', '')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏...")
    try:
        response = requests.get(status_url, verify=False)
        if response.status_code == 200:
            data = response.json()
            print(f"üìä –ó–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {data.get('count', 0)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ CVE –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    test_cve_upload()
